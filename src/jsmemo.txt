원시값의 메서드

자바스크립트는 원시값(문자열,숫자등 )을 마치 객체처럼 다룰 수 있게 해준다.
원시값에도 객체에서처럼 메서드를 호출 할 수 있다.

원시값
원시형의 값이다.
원시형의 종류에는 문자(String), 숫자(number), bigint, 불린(boolean), 심볼(symbol), null, undefined 형으로 7가지다.

객체
프로퍼티에 다양한 종류의 값을 저장 할 수 있다.
{name : "John", age : 30}와 같이 대괄호 {}를 사용해서 만들 수 있다.
자바스크립트에 여러종류의 객테가 있는데, 함수도 객체의 일종이다.
객체의 장점 중 하나는 함수를 프로퍼티로 저장 할 수 있다.

자바스크립트는 날짜, 오류 HTML요소등을 다룰 수 있게 해주는 다양한 내장객체를 제공한다.
이 객체들은 고유한 프로퍼티와 메서드를 가진다.
하지만 이런 기능들을 사용하면 시스템 자원이 많이 소모된다는 단점이 있다.
객체는 원시값보다 무겁고, 내부구조를 유지하기 위해 추자가원을 사용하기 때문이다.

원시값을 객체처럼 사용하기
자바스크립트 창안자는 다음과 같은 모순점을 해결해야만 했다.
문자열이나 숫자와 같은 원시값을 다루는 작업이 많은데, 메서드를 사용화면 작업을 수월하게 할 수 있다.
원시값은 가능한한 빠르고 가벼워야 한다.

좀 어색해 보이지만, 자바스크립트 창안자는 아래와 같은 방법을 써서 해결책을 만들었다.
1. 원시값은 원시값 그대로 남겨줘 단일 값 형태를 유지한다.
2. 문자열, 숫자, 불린, 심볼의 메서드와 프로퍼티에 접근할 수 있도록 언어 차원에서 허용한다.
3. 이를 가능하게 하기 위해, 원시값이 메서드나 프로퍼티에 접근하려 하면 추가 기능을 제공해주는 특수한 객체, "원시 래퍼 객체(object wrapper)"를 만들어
   준다. 이 객체는 곧 삭제된다.

래퍼객체는 원시 타입에 따라 종류가 다양하다. 각 래퍼객체는 원시자료향의 이름을 그대로 차용해서,
String,Number,Boolean, Symbol라고 부른다. 래퍼 객체 마다 제공하는 메서드 역시 다르다.

인수로 받은 문자열의 모든 글자를 대문자로 바꿔주는 메서드 str.toUpperCase()를 예로 들어서 설명.
↓ 메서드는 아래와 같이 동작한다.
let str = "Hello";
alert( str.toUpperCase() ); // HELLO

1. 문자열은 str은 원시값이므로 원시값의 프로퍼티(toUpperCase)에 접근하는 순간 특별한 객체가 만들어진다.
   이 객체는 문자열의 값을 알고 있고, toUpperCase()와 같은 유용한 메서드를 가지고 있다.
2. 메서드가 실행되고, 새로운 문자열이 반환된다.(alert 창에 이 문자열이 출력된다.)
3. 특별한 객체는 파괴되고, 원시값 str만 남는다.
이런 내부 프로세스를 통해 원시값을 가볍게 유지하면서 메서드를 호출 할 수 있다.

자바스크립트 엔진은 위 프로세스의 최적화에 많은 신경을 쓴다.
원시 래퍼 객체를 만들지 않고 마치 원시 래퍼객체를 생성한것처럼 동작하게 해준다.

